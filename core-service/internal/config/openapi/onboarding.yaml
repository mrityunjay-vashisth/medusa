openapi: 3.0.2
info:
  title: Medusa Tenant Onboarding API
  version: 1.0.0
  description: Tenant management and onboarding endpoints
servers:
  - url: /apis/core/v1/tenants
    description: Tenant API base path

paths:
  /onboard:
    post:
      operationId: onboardTenant
      summary: Onboard a new tenant
      description: Submits a request to onboard a new tenant.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organization_name:
                  type: string
                email:
                  type: string
                role:
                  type: string
                address:
                  type: string
                phone_number:
                  type: string
                business_identifier:
                  type: string
              required:
                - organization_name
                - email
                - role
      responses:
        '200':
          description: Successful onboarding request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  request_id:
                    type: string
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /status:
    get:
      operationId: getTenants
      summary: Get tenant list based on status
      description: Returns a list of tenants filtered by status.
      security:
        - bearerAuth: []
      parameters:
        - name: state
          in: query
          schema:
            type: string
            enum: [pending, active]
          description: Filter tenants by state
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    organization_name:
                      type: string
                    email:
                      type: string
                    status:
                      type: string
                    request_id:
                      type: string
                    tenant_id:
                      type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /status/{id}:
    get:
      operationId: getTenantById
      summary: Get tenant details by ID
      description: Returns details for a specific tenant.
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant request ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  organization_name:
                    type: string
                  email:
                    type: string
                  status:
                    type: string
                  request_id:
                    type: string
                  tenant_id:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /approve:
    post:
      operationId: approveTenant
      summary: Approve a tenant onboarding request
      description: Updates a tenant status from pending to active.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request_id:
                  type: string
              required:
                - request_id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Not found
  
  /tenant/{id}:
    get:
      operationId: checkTenantById
      summary: Check if tenant exist
      description: Returns true if tenant exist.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Tenant request ID
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: string
        '404':
          description: Not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string